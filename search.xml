<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>什么？！你的Unipus不安全？！</title>
      <link href="/2019/04/02/BreakUnipus/"/>
      <url>/2019/04/02/BreakUnipus/</url>
      
        <content type="html"><![CDATA[<p><strong>众所周知，破解各大学习平台和校园办公网是广大计算机学子喜闻乐见的事</strong></p><p><strong>那么，攻击一个网站最简单的方式就是进行SQL注入或XSS攻击</strong></p><ul><li>SQL注入攻击<ul><li>所谓SQL注入，就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</li></ul></li></ul><a id="more"></a><ul><li>什么时候最容易受到SQL注入攻击<ul><li>登录</li><li>查询</li></ul></li><li>例子<ul><li>假设我们的输入的用户名为<code>xiaoming</code> 密码为<code>&#39;123456&#39;</code>  来看一条正常的SQL语句<code>SELECT * FROM User WHERE username=&#39;biao&#39; AND password=&#39;123456&#39;</code>执行完成之后便会获得’xiaoming’的用户信息，那么如果未进行SQL注入防御的话，我只需要在填写密码的时候输入<code>&quot; &#39;or 1 or&#39; &quot;</code>注意左右是带两个单引号的，那么SQL语句就会变为<code>SELECT * FROM User WHERE username=&#39;biao&#39; AND password=&#39;&#39;or 1 or&#39;&#39;</code> 这样就够造成了一个永真式，依然可以获得’xiaoming’的用户信息</li></ul></li></ul><p><strong>经高人指导，得知我校Unipus平台是可以进行SQL注入的，而且这网站数据库的Debug没关，这就为攻破带了了更多方便的地方</strong></p><ul><li>先随便攻击一下试试，输入<code>&#39;a&#39;</code></li></ul><p><img src="/2019/04/02/BreakUnipus/TIM截图20190402223955.png" alt></p><p><strong>可以看到红线部分组成为 单引号’a’单引号，其中的’a’就是刚才输入的东西，接下来开始构造攻击语句</strong></p><p>在密码框中输入<code>&#39;or 1 or&#39;</code>注意左右两边一定要有单引号，且1左右各有一个空格，接下来就可进入任何已知学号人的Unipus平台</p><p><strong>PS：虽然进去也没啥卵用，不过可以偷偷看到你好奇的学号的名字哟~</strong></p><p>end</p>]]></content>
      
      
      
        <tags>
            
            <tag> 武林秘籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现简易图形验证码识别</title>
      <link href="/2019/03/27/Python%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E5%9B%BE%E5%BD%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/"/>
      <url>/2019/03/27/Python%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E5%9B%BE%E5%BD%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p><strong>突然发现自己写的爬虫都不带验证码识别，心血来潮学一学简单的识别原理（基础版   = v =）</strong></p><ul><li>准备工具<ul><li>Python3.6</li><li>库：PIL(用于处理图片) &amp; tesserocr(用于识别)  &amp;  claptcha(用于生成验证码)</li></ul></li></ul><p><strong>STEP 1：生成一张验证码</strong></p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> claptcha <span class="keyword">import</span> Claptcha</span><br><span class="line">c = Claptcha(<span class="string">"q6jn"</span>, <span class="string">"C:\Windows\Fonts\consola.ttf"</span>, noise=<span class="number">0.5</span>)</span><br><span class="line">t, _ = c.write(<span class="string">"q6jn.png"</span>)</span><br><span class="line"><span class="comment"># 目录下会多出一张图如下</span></span><br></pre></td></tr></table></figure><p><img src="/2019/03/27/Python实现简易图形验证码识别/q6jn.png" alt></p><p><strong>可以看到有一段干扰线，接下来的事情就是尽量让所有有效元素凸显出来</strong></p><p><strong>STEP 2：灰度，二值处理</strong></p><p>所谓的灰度，二值处理说白了就是把图片转换成黑白的，0为黑色，255为白色 所以是二值化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarizing</span><span class="params">(img, threshold)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    对传入的图片对象进行灰度，二值处理</span></span><br><span class="line"><span class="string">    threshold为一个阈值，可以根据图片鲜艳程度而定</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    img = img.convert(<span class="string">'L'</span>)  <span class="comment"># 灰度化</span></span><br><span class="line">    pixdata = img.load()</span><br><span class="line">    w, h = img.size</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历像素点，进行二值化</span></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(h):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(w):</span><br><span class="line">            <span class="keyword">if</span> pixdata[x, y] &lt; threshold:</span><br><span class="line">                pixdata[x, y] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                pixdata[x, y] = <span class="number">255</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> img</span><br></pre></td></tr></table></figure><p>执行后效果如下，可以看到还是有很多噪点的</p><p><img src="/2019/03/27/Python实现简易图形验证码识别/q6jn_1.png" alt></p><p><strong>STEP 3：降噪</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depoint</span><span class="params">(bin_img)</span>:</span></span><br><span class="line">    <span class="string">"""利用8邻域算法对传入二值化后的图片进行降噪"""</span></span><br><span class="line">    pixdata = bin_img.load()</span><br><span class="line">    w, h = bin_img.size</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">1</span>, h<span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, w<span class="number">-1</span>):</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x, y<span class="number">-1</span>] &gt; <span class="number">245</span>:  <span class="comment"># 上</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x, y+<span class="number">1</span>] &gt; <span class="number">245</span>:  <span class="comment"># 下</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x<span class="number">-1</span>, y] &gt; <span class="number">245</span>:  <span class="comment"># 左</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x+<span class="number">1</span>, y] &gt; <span class="number">245</span>:  <span class="comment"># 右</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x<span class="number">-1</span>, y<span class="number">-1</span>] &gt; <span class="number">245</span>:  <span class="comment"># 左上</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x<span class="number">-1</span>, y+<span class="number">1</span>] &gt; <span class="number">245</span>:  <span class="comment"># 左下</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x+<span class="number">1</span>, y<span class="number">-1</span>] &gt; <span class="number">245</span>:  <span class="comment"># 右上</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pixdata[x+<span class="number">1</span>, y+<span class="number">1</span>] &gt; <span class="number">245</span>:  <span class="comment"># 右下</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count &gt; <span class="number">4</span>:</span><br><span class="line">                pixdata[x, y] = <span class="number">255</span></span><br><span class="line">    <span class="keyword">return</span> bin_img</span><br></pre></td></tr></table></figure><p>执行后效果如下</p><p><img src="/2019/03/27/Python实现简易图形验证码识别/q6jn_2.png" alt></p><p><strong>STEP 4：识别</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tesserocr</span><br><span class="line"></span><br><span class="line">p1 = Image.open(<span class="string">"q6jn_2.png"</span>)</span><br><span class="line">a = tesserocr.image_to_text(p1)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果为_8649</span></span><br></pre></td></tr></table></figure><p>是的，翻车了，不过既然基础版，识别率必然不高= =。。。还要进一步处理，以后再见=v=</p>]]></content>
      
      
      
        <tags>
            
            <tag> 好玩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0开始利用github和hexo搭建免费的个人博客</title>
      <link href="/2019/03/16/Build-your-own-free-blog/"/>
      <url>/2019/03/16/Build-your-own-free-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>注册一个github账号</li><li>安装你系统对应的git，如windows系统就安装git for windows  <a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="noopener">廖雪峰大神的Git安装以及配置教程</a></li><li>安装nodejs、npm并配置好环境 <a href="https://www.cnblogs.com/zhouyu2017/p/6485265.html" target="_blank" rel="noopener">nodejs、npm的安装教程</a></li><li>在任意磁盘新建一个叫做blog的文件夹用来存放你博客的代码</li></ul><h1 id="第一步：新建Github仓库"><a href="#第一步：新建Github仓库" class="headerlink" title="第一步：新建Github仓库"></a>第一步：新建Github仓库</h1><a id="more"></a><p><img src="/2019/03/16/Build-your-own-free-blog/1.png" alt="仓库信息的填写"></p><ul><li>仓库名称务必严格按照 你的Github名称.github.io填写 比如我的github叫WakenAworld 所以我就填WakenAworld.github.io</li></ul><h1 id="第二步：配置SSH-Key"><a href="#第二步：配置SSH-Key" class="headerlink" title="第二步：配置SSH Key"></a>第二步：配置SSH Key</h1><p><strong>为啥要配置SSH Key呢？</strong></p><p>​    因为SSH Key可以保证你提交代码的时候会提交到你自己的仓库里而不是别人的</p><p><strong>如何生成SSH Key呢？</strong></p><p>​    在git安装并配置好的前提下，进入你新建好的blog文件夹下，点击右键然后点Git Bash Here</p><p>然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;配置git时你的邮件地址&quot;</span><br></pre></td></tr></table></figure><p>连按三次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： </p><p><img src="/2019/03/16/Build-your-own-free-blog/2.png" alt></p><p><img src="/2019/03/16/Build-your-own-free-blog/3.png" alt></p><p><strong>测试是否成功</strong></p><p>在git中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi ***! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息说明SSH已配置成功！</p><h1 id="第三步：安装Hexo并生成你的博客页！"><a href="#第三步：安装Hexo并生成你的博客页！" class="headerlink" title="第三步：安装Hexo并生成你的博客页！"></a>第三步：安装Hexo并生成你的博客页！</h1><ul><li><strong>在git bash中执行以下代码，稍等片刻</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><ul><li><strong>进入你之前进入的blog文件夹下，执行以下命令初始化一个hexo博客</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><ul><li><strong>继续执行以下命令生成博客页</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><ul><li><strong>开启本地监听端口</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>这时候在浏览器中输入localhost:4000 即可在本地脱机预览博客页（若输入后出现空白页面，则可能是4000这个端口被占用，解决办法自行百度xD，百度上有好多）</p><p><img src="/2019/03/16/Build-your-own-free-blog/4.png" alt="出现此图片说明成功啦！"></p><h1 id="第四步：修改配置文件"><a href="#第四步：修改配置文件" class="headerlink" title="第四步：修改配置文件"></a>第四步：修改配置文件</h1><p><strong>用记事本打开博客根目录下的<code>_config.yml</code>文件</strong></p><p><img src="/2019/03/16/Build-your-own-free-blog/5.png" alt></p><p><strong>在文件中找到<code>deploy:</code>开始时deploy下只有一个<code>type:</code>，我们需要修改一下，添加一点东西，代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: **********(换成你自己github仓库的SSH，获取方式如下图)</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><img src="/2019/03/16/Build-your-own-free-blog/6.png" alt></p><h1 id="第五步：发表你的第一篇博客"><a href="#第五步：发表你的第一篇博客" class="headerlink" title="第五步：发表你的第一篇博客"></a>第五步：发表你的第一篇博客</h1><p><strong>先安装一个扩展，在git bash中执行以下代码,稍等片刻即安装成功</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><strong>然后在你的博客根目录下用git bash执行<code>hexo new &quot;我的第一篇博客&quot;</code>，hexo会在source/_post下自动为你生成名为<code>我的第一篇博客.md</code>的文件，用md文档编辑器(推荐Typora，轻巧好用)编辑后保存即可准备发布</strong></p><p><strong>一切就绪后，在你的博客根目录下用git bash执行<code>hexo d -g</code>即可将所有更改push到你的远程github仓库中，等几分钟后，在浏览器输入 <code>你的github名称.github.io</code>就可以进入你的博客主页了，谁都可以访问噢。All Done.</strong></p><p><strong>接下来就是安装配置你喜欢的主题了，Github上有很多美观的开源hexo主题。选择喜欢的主题克隆到hexo/themes/即可，并在之前的<code>_config.yml</code>中修改<code>theme: landscape</code>，把landscape改为你的主题的仓库名字就可以用了</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取天津大学课表</title>
      <link href="/2019/03/15/Hello-Hexo/"/>
      <url>/2019/03/15/Hello-Hexo/</url>
      
        <content type="html"><![CDATA[<p>需要的库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> xlwt  <span class="comment">#用来写入Excel</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver  <span class="comment">#模拟浏览器行为</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> getpass  <span class="comment">#隐藏输入的密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还要单独安装chromedriver</span></span><br></pre></td></tr></table></figure><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>由于校园办公网的课程表页是用js渲染出来的而不是静态页面，所以不直接用requests库去get页面，那样得到的网页源代码是不经js渲染的，而校园网又没有提供接口，所以只能暴力解决。Selenium神器登场</p><a id="more"></a><ul><li>定位登录页面元素</li><li>自动登录</li><li>自动进入课程表页</li><li>获取渲染后的网页源代码</li><li>BeautifulSoup解析</li><li>写入数据</li></ul><h3 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> getpass</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取渲染后的代码</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://classes.tju.edu.cn"</span></span><br><span class="line">username = input(<span class="string">"学号："</span>)</span><br><span class="line">password = getpass.getpass(<span class="string">"密码："</span>)</span><br><span class="line"></span><br><span class="line">browser.get(url)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">browser.find_element_by_name(<span class="string">'username'</span>).send_keys(username)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">browser.find_element_by_name(<span class="string">'password'</span>).send_keys(password)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">browser.find_element_by_name(<span class="string">'submit'</span>).click()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">browser.switch_to.frame(<span class="string">'iframeMain'</span>)</span><br><span class="line">browser.find_element_by_xpath(<span class="string">"//div[@class='inner-list-2']/a[@href='/eams/courseTableForStd.action']"</span>).click()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">html = browser.page_source</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位课程表</span></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="comment"># print(soup)</span></span><br><span class="line">table = soup.find(<span class="string">'table'</span>, attrs=&#123;<span class="string">'id'</span>: <span class="string">'manualArrangeCourseTable'</span>&#125;)</span><br><span class="line">trs = table.find_all(<span class="string">'tr'</span>)[<span class="number">1</span>:]</span><br><span class="line"><span class="comment"># tds = trs[2].find_all('td')</span></span><br><span class="line"><span class="comment"># print(tds[1].text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入课程表</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'0'</span>: [],</span><br><span class="line">    <span class="string">'1'</span>: [],</span><br><span class="line">    <span class="string">'2'</span>: [],</span><br><span class="line">    <span class="string">'3'</span>: [],</span><br><span class="line">    <span class="string">'4'</span>: [],</span><br><span class="line">    <span class="string">'5'</span>: [],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">12</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(trs[i], bs4.element.Tag):</span><br><span class="line">        tds = trs[i].find_all(<span class="string">'td'</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">            a = str(int(i/<span class="number">2</span>))</span><br><span class="line">            <span class="comment"># print(a)</span></span><br><span class="line">            data[a].append(tds[j].text)</span><br><span class="line"><span class="comment"># print(data)</span></span><br><span class="line">browser.close()</span><br><span class="line"><span class="comment"># 初始化表格</span></span><br><span class="line">workbook = xlwt.Workbook(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">worksheet = workbook.add_sheet(<span class="string">'课程表'</span>)</span><br><span class="line">worksheet.col(<span class="number">0</span>).width = <span class="number">4000</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    worksheet.col(i).width = <span class="number">8000</span></span><br><span class="line"></span><br><span class="line">style = xlwt.XFStyle()</span><br><span class="line">font = xlwt.Font()</span><br><span class="line">font.name = <span class="string">"宋体"</span></span><br><span class="line">font.height = <span class="number">13</span> * <span class="number">20</span></span><br><span class="line">alignment = xlwt.Alignment()</span><br><span class="line">alignment.horz = xlwt.Alignment.HORZ_CENTER</span><br><span class="line">alignment.vert = xlwt.Alignment.VERT_CENTER</span><br><span class="line">style.font = font</span><br><span class="line">style.alignment = alignment</span><br><span class="line"></span><br><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">"节次"</span>, style)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">    a = str(i)</span><br><span class="line">    worksheet.write(<span class="number">0</span>, i, <span class="string">"星期"</span> + a, style)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    b = str(j)</span><br><span class="line">    c = str(<span class="number">2</span> * j)</span><br><span class="line">    worksheet.write(j, <span class="number">0</span>, <span class="string">"第"</span> + b + <span class="string">"节"</span> + <span class="string">'\n'</span> + <span class="string">"第"</span> + c + <span class="string">"节"</span>, style)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">        worksheet.write(i, j, data[str(i<span class="number">-1</span>)][j<span class="number">-1</span>], style)</span><br><span class="line"></span><br><span class="line">workbook.save(<span class="string">'课程表.xls'</span>)</span><br></pre></td></tr></table></figure><p><strong>终端运行！！！！！！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
